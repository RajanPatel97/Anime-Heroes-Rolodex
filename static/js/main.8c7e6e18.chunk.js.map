{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list-component.jsx","components/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","hero","className","alt","src","img","name","CardList","heroes","map","id","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","this","filteredHeroes","filter","toLowerCase","includes","console","log","e","setState","target","value","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yyBAEaA,G,YAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,UAAKH,EAAKI,OAC7B,6BAAKJ,EAAKK,YCFLC,G,MAAW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvB,OACI,qBAAKN,UAAU,YAAf,SACKM,EAAOC,KAAI,SAAAR,GAAI,OACb,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKS,WCLlBC,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIX,UAAU,aACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,M,OCyBHG,E,kDAxBb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXT,OAAQA,EACRU,YAAa,IAJH,E,qDASJ,IAAD,SACyBC,KAAKF,MAA7BT,EADD,EACCA,OAAQU,EADT,EACSA,YAEVE,EAAiBZ,EAAOa,QAAO,SAAApB,GAAI,OAAIA,EAAKK,KAAKgB,cAAcC,SAASL,EAAYI,kBAG1F,OAFAE,QAAQC,IAAIL,GAGV,sBAAKlB,UAAU,MAAf,UACE,cAAC,EAAD,CAAWU,YAAY,gBAAgBC,aAAc,SAAAa,GAAC,OAAI,EAAKC,SAAS,CAACT,YAAaQ,EAAEE,OAAOC,WAC/F,cAAC,EAAD,CAAUrB,OAAQY,W,GAnBRU,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c7e6e18.chunk.js","sourcesContent":["import './card-component.styles.css'\r\n\r\nexport const Card = ({hero}) => (\r\n    <div className='card-container'>\r\n        <img alt=\"hero\" src={`${hero.img}`}/>\r\n        <h1>{hero.name}</h1>\r\n    </div>\r\n)\r\n","import { Card } from '../card/card-component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = ({ heroes }) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {heroes.map(hero => (\r\n               <Card key={hero.id} hero={hero}></Card>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import './search-box-component.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input \r\n        className=\"search-box\"\r\n        type='search' \r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n)\r\n","import { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list-component';\nimport { SearchBox } from './components/search-box/search-box-component';\nimport heroes from './heroes.json';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      heroes: heroes,\n      searchField: ''\n    }\n  }\n\n\n  render() {\n    const { heroes, searchField } = this.state;\n    \n    const filteredHeroes = heroes.filter(hero => hero.name.toLowerCase().includes(searchField.toLowerCase()));\n    console.log(filteredHeroes);\n\n    return (\n      <div className=\"App\">\n        <SearchBox placeholder='Search Heroes' handleChange={e => this.setState({searchField: e.target.value})}></SearchBox>\n        <CardList heroes={filteredHeroes}></CardList>\n      </div>\n    );  \n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}